version: '3.9'

services:
  db:
    image: postgres:16
    container_name: "meal-shaker-db-container"
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./docker/db/init:/docker-entrypoint-initdb.d
#    ports:
#      - ${DB_PORT}:${DB_PORT}
    expose:
      - ${DB_PORT}
    command: ${DB_CMD}

  backend:
    container_name: "meal-shaker-backend-container"
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    env_file:
      - .env
    working_dir: /app
    volumes:
      - "./backend/src:/app/src"
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    entrypoint: ["/app/entrypoint.sh"]
    depends_on:
      - db

  frontend:
    container_name: "meal-shaker-frontend-container"
    image: "meal-shaker-frontend-image"
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile.local
    working_dir: /app
    volumes:
      - "./frontend:/app"
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    tty: true
    env_file:
      - .env
    environment:
      - WATCHPACK_POLLING=true
    command: ${FRONTEND_CMD}
    depends_on:
      - "db"


#  https-portal:
#    image: steveltn/https-portal:1
#    ports:
#      - '80:80'
#      - '443:443'
#    environment:
#      DOMAINS: ${HTTP_PORTAL_DOMAIN}
#      STAGE: ${STAGE} # Don't use production until staging works
#      CUSTOM_NGINX_DOMAIN_TLD_CONFIG_BLOCK: ${CUSTOM_NGINX_DOMAIN_TLD_CONFIG_BLOCK}
#    volumes:
#      - https-portal-data:/var/lib/https-portal
#
#volumes:
#  https-portal-data: